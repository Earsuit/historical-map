name: C/C++ CI

permissions:
  contents: write

on:
  push:
    branches: [ "main" ]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: install Conan
      id: conan
      uses: turtlebrowser/get-conan@main
      with:
        version: 2.4.1
    - name: Conan version
      run: echo "${{ steps.conan.outputs.version }}"
    - name: Cache Conan Dependencies
      id: cache-conan
      uses: actions/cache@v4
      with:
        path: ~/.conan2
        key: ${{ runner.os }}-conan
    - name: Create default Conan profile
      if: steps.cache-conan.outputs.cache-hit != 'true'
      run: conan profile detect --force
    - name: Conan install dependencies
      run: conan install . --build=missing -s build_type=Release -s:a=compiler.cppstd=gnu20 -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True
    - name: "run cmake"
      run: cmake --preset conan-release
    - name: "run make" 
      run: cmake --build . -j
      working-directory:
        build/Release
    - name: generation translation mo file
      run: cmake --build . -j --target translation
      working-directory:
        build/Release
    - name: Pack
      run: cpack
      working-directory:
        build/Release
    - name: "Upload artifact"
      uses: actions/upload-artifact@v4
      with:
        name: linux-build-artifact
        path: build/

  build-macos:
    runs-on: macos-13-xlarge 

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: "install brew"
      run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    - name: "install compiler"
      run: brew install llvm@17
    - name: "set env var"
      run: |
        echo "CC=$(brew --prefix llvm@17)/bin/clang" >> "$GITHUB_ENV"
        echo "CXX=$(brew --prefix llvm@17)/bin/clang++" >> "$GITHUB_ENV"
    - name: Fix conan install fail # https://github.com/turtlebrowser/get-conan/issues/9#issuecomment-2267391072
      uses: actions/setup-python@v5
      with:
        python-version: '3.9' 
    - name: install Conan
      id: conan
      uses: turtlebrowser/get-conan@main
      with:
        version: 2.4.1
    - name: Conan version
      run: echo "${{ steps.conan.outputs.version }}"
    - name: Cache Conan Dependencies
      id: cache-conan
      uses: actions/cache@v4
      with:
        path: ~/.conan2
        key: ${{ runner.os }}-conan
    - name: Create default Conan profile
      if: steps.cache-conan.outputs.cache-hit != 'true'
      run: conan profile detect --force
    - name: Conan install dependencies
      run: conan install . --build=missing -s build_type=Release -s:a=compiler.cppstd=gnu20
    - name: run cmake
      run: cmake --preset conan-release
    - name: run make
      run: cmake --build . -j
      working-directory:
        build/Release
    - name: generation translation mo file
      run: cmake --build . -j --target translation
      working-directory:
        build/Release
    - name: Pack
      run: cpack
      working-directory:
        build/Release
    - name: "Upload artifact"
      uses: actions/upload-artifact@v4
      with:
        name: macos-build-artifact
        path: build/

  build-win:
    runs-on: windows-latest

    steps:
    - uses: lukka/get-cmake@v3.29.1
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: install Conan
      id: conan
      uses: turtlebrowser/get-conan@main
      with:
        version: 2.4.1
    - name: Conan version
      run: echo "${{ steps.conan.outputs.version }}"
    - name: Cache Conan Dependencies
      id: cache-conan
      uses: actions/cache@v4
      with:
        path: ~/.conan2
        key: ${{ runner.os }}-conan
    - name: Create default Conan profile
      if: steps.cache-conan.outputs.cache-hit != 'true'
      run: conan profile detect --force
    - name: Conan install dependencies
      run: conan install . --build=missing -s build_type=Release -s:a=compiler.cppstd=20
    - name: run cmake
      run: cmake --preset conan-default
    - name: run make
      run: cmake --build . -j --config Release
      working-directory:
        build/
    - name: generation translation mo file
      run: cmake --build . -j --config Release --target translation
      working-directory:
        build/
    - name: Pack
      run: cpack
      working-directory:
        build/
    - name: "Upload artifact"
      uses: actions/upload-artifact@v4
      with:
        name: win-build-artifact
        path: build/

  test-linux:
    needs: build-linux

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: "Download artifact"
      uses: actions/download-artifact@v4
      with:
        name: linux-build-artifact
        path: build
    - name: "test"
      run: |
        chmod -R a+x test/*
        ctest --output-on-failure
      working-directory:
        build/Release

  test-macos:
    needs: build-macos

    runs-on: macos-13-xlarge

    steps:
    - uses: actions/checkout@v4
    - name: "Download artifact"
      uses: actions/download-artifact@v4
      with:
        name: macos-build-artifact
        path: build
    - name: "test"
      run: |
        chmod -R a+x test/*
        ctest --output-on-failure
      working-directory:
        build/Release

  test-win:
    needs: build-win

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: "Download artifact"
      uses: actions/download-artifact@v4
      with:
        name: win-build-artifact
        path: build
    - name: "test"
      run: |
        chmod -R a+x test/*
        ctest --output-on-failure
      working-directory:
        build/  

  publish-linux:
    needs: test-linux
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: linux-build-artifact
        path: build
    - name: Get tag name
      id: get_tag
      uses: actions/github-script@v4
      with:
        script: |
          const ref = github.context.ref;
          const tag = ref.replace('refs/tags/', '');
          core.setOutput('tag_name', tag);
    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
          body_path: ${{ github.workspace }}/ChangeLog.txt
          files: |
            ${{ github.workspace }}/build/Release/HistoricalMap-${{ steps.get_tag.outputs.tag_name }}-x64.deb

  publish-macos:
    needs: test-macos

    runs-on: macos-13-xlarge

    steps:
    - uses: actions/checkout@v4
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: macos-build-artifact
        path: build
    - name: Get tag name
      id: get_tag
      uses: actions/github-script@v4
      with:
        script: |
          const ref = github.context.ref;
          const tag = ref.replace('refs/tags/', '');
          core.setOutput('tag_name', tag);
    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
          body_path: ${{ github.workspace }}/ChangeLog.txt
          files: |
            ${{ github.workspace }}/build/Release/HistoricalMap-${{ steps.get_tag.outputs.tag_name }}-arm64.dmg

  publish-win:
    needs: test-win

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: "Download artifact"
      uses: actions/download-artifact@v4
      with:
        name: win-build-artifact
        path: build
    - name: Get tag name
      id: get_tag
      uses: actions/github-script@v4
      with:
        script: |
          const ref = github.context.ref;
          const tag = ref.replace('refs/tags/', '');
          core.setOutput('tag_name', tag);
    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
          body_path: ${{ github.workspace }}/ChangeLog.txt
          files: |
            ${{ github.workspace }}/build/Release/HistoricalMap-${{ steps.get_tag.outputs.tag_name }}-x64.zip
 