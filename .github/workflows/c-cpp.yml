name: C/C++ CI

on:
  push:
    branches: [ "main" ]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: "install dependencies"
      run: sudo apt-get install libgl1-mesa-dev libglew-dev libglfw3-dev libcurl4-openssl-dev libgtk-3-dev -y
    - name: "create build dir"
      run: mkdir build
    - name: "run cmake"
      run:
        cmake .. -DGTEST_ENABLE=ON
      working-directory:
        build/
    - name: "run make" 
      run: make -j
      working-directory:
        build/
    - name: "Upload artifact"
      uses: actions/upload-artifact@v4
      with:
        name: linux-build-artifact
        path: build/

  build-macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: "install brew"
      run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    - name: "install dependencies"
      run: brew install llvm@17 glew glfw cmake
    - name: "set env var"
      run: |
        echo "CC=/opt/homebrew/opt/llvm@17/bin/clang" >> "$GITHUB_ENV"
        echo "CXX=/opt/homebrew/opt/llvm@17/bin/clang++" >> "$GITHUB_ENV"
    - name: "create build dir"
      run: mkdir build
    - name: "run cmake"
      run: cmake .. -DGTEST_ENABLE=ON
      working-directory:
        build/
    - name: "run make" 
      run: make -j
      working-directory:
        build/
    - name: "Upload artifact"
      uses: actions/upload-artifact@v4
      with:
        name: macos-build-artifact
        path: build/

  build-win:
    runs-on: windows-latest

    steps:
    - uses: lukka/get-cmake@v3.29.1
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: install vcpkg
      run: | 
        git clone https://github.com/microsoft/vcpkg
        .\vcpkg\bootstrap-vcpkg.bat
    - name: install dependencies
      run: .\vcpkg\vcpkg.exe install glew glfw3 sqlite3 curl
    - name: create build dir
      run: mkdir build
    - name: run cmake
      run:
        cmake -B . -S .. -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}\vcpkg\scripts\buildsystems\vcpkg.cmake -DGTEST_ENABLE=ON
      working-directory:
        build/
    - name: run make
      run: cmake --build . -j
      working-directory:
        build/
    - name: "Upload artifact"
      uses: actions/upload-artifact@v4
      with:
        name: win-build-artifact
        path: build/

  test-linux:
    needs: build-linux

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: "Download artifact"
      uses: actions/download-artifact@v4
      with:
        name: linux-build-artifact
        path: build
    - name: "test"
      run: |
        chmod -R a+x test/*
        ctest --output-on-failure
      working-directory:
        build/

  test-macos:
    needs: build-macos

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4
    - name: "Download artifact"
      uses: actions/download-artifact@v4
      with:
        name: macos-build-artifact
        path: build
    - name: "test"
      run: |
        chmod -R a+x test/*
        ctest --output-on-failure
      working-directory:
        build/

  test-win:
    needs: build-win

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: "Download artifact"
      uses: actions/download-artifact@v4
      with:
        name: win-build-artifact
        path: build
    - name: "test"
      run: |
        chmod -R a+x test/*
        ctest --output-on-failure
      working-directory:
        build/  
